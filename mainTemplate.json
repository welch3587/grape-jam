{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "defaultValue": "cloudadmin",
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "authenticationType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key"
      }
    },
    "location": {
      "defaultValue": "centralus",
      "type": "String"
    },
    "storageAccountName": {
      "defaultValue": "defaultStorageAcctName",
      "type": "String"
    },
    "storageAccountType": {
      "defaultValue": "Standard_LRS",
      "type": "String"
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "Description": "Indicates whether the storage account is new or existing"
      }
    },
    "existingStorageAccountRG": {
      "type": "string",
      "metadata": {
        "description": "Resource Group of the Existing storage account."
      },
      "defaultValue": ""
    },
    "vmSize": {
      "defaultValue": "Standard_D2",
      "allowedValues": [ "Standard_D2", "Standard_D3", "Standard_D4", "Standard_D5_V2", "Standard_G5" ],
      "type": "String"
    },
    "vmName": {
      "type": "String"
    },
    "virtualNetworkName": {
      "type": "String"
    },
    "subnetName": {
      "type": "String"
    },
    "virtualNetworkResourceGroup": {
      "type": "String"
    },
    "directorIP": {
      "type": "string"
    },
    "directorFQDN": {
      "type": "string"
    },
    "directorEngineCommPort": {
      "type": "string"
    },
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://tibcogridserver.blob.azure.net",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    }
  },
  "variables": {
    "deployments-api-version": "2016-02-01",
    "storage-api-version": "2015-06-15",
    "baseUrl": "[concat(parameters('artifactsBaseUrl'), '/')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "apiVersion": "2015-06-15",
    "resourceGroup": "[parameters('vmName')]",
    "networkInterfaceName": "[parameters('vmName')]",
    "networkInterfaceID": "[concat('Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'),'/subnets/',parameters('subnetName'))]",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "SubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "imagePublisher": "tibco-software",
    "imageOffer": "grid-server-engine-preview",
    "imageSku": "gs620-u14042",
    "vhdContainer": "vhds",
    "osDiskName": "[parameters('vmName')]",
    "storageAccountSetupURL": "[concat(variables('baseUrl'),'storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]"
  },
  "resources": [
    {
      "name": "storageAccountSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deployments-api-version')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storage-api-version": {
            "value": "[variables('storage-api-version')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountExistingRG": {
            "value": "[parameters('existingStorageAccountRG')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "secrets": [ ],
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "GridServerOSDisk",
            "vhd": {
              "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net/', variables('vhdContainer'), '/', variables('osDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "storageAccountSetup",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ],
	  "plan": {
        "name": "[variables('imageSku')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [

      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "tags": { },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      },
      "dependsOn": [ ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/CustomScriptForLinux')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "[concat('sh /opt/AzureVMExtension.sh ',parameters('adminUsername'),' ',parameters('directorIP'),' ',parameters('directorFQDN'),' ',parameters('directorEngineCommPort'),' ',parameters('directorIP'),' ',parameters('directorFQDN'))]"
        }
      }
    }
  ]
}
